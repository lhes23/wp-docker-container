version: "3.8"

services:
  nginx:
    container_name: ${APP_NAME}_nginx
    build: ./docker/nginx
    command: nginx -g "daemon off;"
    links:
      - php
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/logs:/var/log/nginx
      - ./wordpress:/var/www/html
      # - ./docker/certbot/www/:/var/www/certbot/:ro
    networks:
      - network

  php:
    container_name: ${APP_NAME}_php
    build: ./docker/php
    ports:
      - "9000:9000"
    volumes:
      - ./wordpress:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - network

  database:
    # default port 3306
    image: mysql:latest
    container_name: ${APP_NAME}_database
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - network
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./docker/database/mysql:/var/lib/mysql
    command:
      - "--default-authentication-plugin=mysql_native_password"

  # LR: Wordpress host would be ${APP_NAME}_database:3306
  # LR: Delete wp-config.php

  wordpress:
    # default port 9000 (FastCGI)
    image: wordpress:latest
    container_name: ${APP_NAME}_wordpress
    depends_on:
      - database
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./wordpress:/var/www/html
    environment:
      - WORDPRESS_DB_HOST="${APP_NAME}_database:3306"
      - WORDPRESS_DB_NAME=$MYSQL_DATABASE
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
    networks:
      - network

  phpmyadmin:
    image: phpmyadmin
    container_name: ${APP_NAME}_pma
    depends_on:
      - database
    restart: unless-stopped
    ports:
      - "8090:80"
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - network

  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ./docker/certbot/www/:/var/www/certbot/:rw
  #     - ./docker/certbot/conf/:/etc/letsencrypt/:rw
  #   command: certonly --webroot --webroot-path=/var/www/html --email $APP_EMAIL --agree-tos --no-eff-email --force-renewal -d $APP_NAME -d www.$APP_NAME

#volumes:
#  wordpress:
#  dbdata:

networks:
  network:
    name: ${APP_NAME}_network
    driver: bridge
